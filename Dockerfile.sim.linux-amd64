# Build the binary statically.
FROM golang:1.20-alpine as builder

# Set up apk dependencies
ENV PACKAGES wget make git libc-dev bash gcc linux-headers eudev-dev curl ca-certificates build-base

# Set working directory for the build
WORKDIR /opt/app

# Add source files
COPY . .

# Install minimum necessary dependencies, remove packages
RUN apk add --no-cache $PACKAGES

# Install musl-cross for static linking
RUN wget https://musl.cc/x86_64-linux-musl-cross.tgz
RUN tar -xvf ./x86_64-linux-musl-cross.tgz
# Build the binary with static linking and strip debugging symbols
RUN GIT_COMMIT=$(git rev-parse HEAD) \
    GIT_COMMIT_DATE=$(git log -n1 --pretty='format:%cd' --date=format:'%Y%m%d') \
    VERSION=$(git describe --tags) \
    REPO=github.com/bnb-chain/greenfield-relayer \
    GOOS=linux GOARCH=amd64 CGO_ENABLED=1 CC=$(pwd)/x86_64-linux-musl-cross/bin/x86_64-linux-musl-gcc go build -ldflags "$REPO/version.AppVersion=$VERSION -X $REPO/version.GitCommit=$GIT_COMMIT -X $REPO/version.GitCommitDate=$GIT_COMMIT_DATE -extldflags=-static" -o build/greenfield-relayer -a main.go

RUN echo "nobody:*:65534:65534:nobody:/_nonexistent:/bin/false" > nobody.passwd

# Pull binary into a stage for deployment
FROM scratch

ENV WORKDIR=/app

WORKDIR ${WORKDIR}

COPY --from=builder /opt/app/build/greenfield-relayer ${WORKDIR}/
COPY --from=builder /opt/app/nobody.passwd /etc/passwd
USER nobody

# Run the app
ENTRYPOINT [ "/app/greenfield-relayer"]